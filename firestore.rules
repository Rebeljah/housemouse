rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function loggedIn() {
        return request.auth != null;
    }
    function auth() {
        return request.auth;
    }
    function uid() {
        return auth().uid;
    }
    function reqSrc() {
        return request.resource
    }
    function userIs(userId) {
        return uid() == userId;
    }
    function affectsAny(keys) {
        return request.resource.keys().hasAny(keys);
    }

    function getUser(userId) {
        return get(/users/$(userId));
    }

    function getHome(homeId) {
        return get(/homes/$(homeId));
    }
    function inHome(homeId) {
        return loggedIn() && getUser(uid()).data.homeId == homeId && uid() in getHome(homeId).data.members;
    }
    function isHomeAdmin(homeId) {
        return inHome(homeId) && getUser(uid()).data.isHomeAdmin;
    }
    function inSameHome(user1, user2) {
        return user1.data.homeId == user2.data.homeId;
    }
    
    match /users/{userId} {
      allow read:
        if loggedIn() && (userIs(userId) || inSameHome(resource, getUser(uid())));
      allow update:
        if loggedIn() && userIs(userId) && !affectsAny(["homeId", "isHomeAdmin"]);
    }

    match /chores/{choreId} {
        allow read: if inHome(resource.data.homeId);
        allow write: if reqSrc().data.homeId && inHome(reqSrc().data.homeId);
    }
    match /invites/{homeId} {
        allow read: if isHomeAdmin(homeId);
    }
    match /homes/{homeId} {
        allow read: if inHome(homeId);
        allow update: if isHomeAdmin(homeId)
    }
  }
}